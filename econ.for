
      SUBROUTINE ECON(TOAGE,SAGE,IORG,PCT,VVOL,D,DLIM)
C
C     MAIN ECONOMICS ROUTINE. THIS SUBROUTINE IS EXECUTED ONCE FOR EACH
C     HARVEST IF THE ECONOMICS OPTION IS SPECIFIED ON MASTER CONTROL
C     CARD.
C
      COMMON/ECONO/ A,B,C,COSTAB,ECO,EUNITS,FC,FCI,FHRC,FHRCI,
     1 HAULC1,HC,HCI,IFER,
     2 LCI,LCM,LDF,LDI,LOGC1,LOGCF(12,12),LOGCI(12,12),
     3 LOGDF(12),LOGDI(12),LOGVF(12),LOGVI(12),LVF,LVI,
     4 MAH,NETRV1,OAHC,OAHCI,OATC,OTHRC1,OVHC,OVHCI,
     5 OVTC,PCTC,PCTCI,PNW1,PNW2,PNDVL1,PONDVL(8,2),PONTAB,
     6 PVI,R,RCI,REGENC,SEV,TRUED,TYHV,VOLM,FAGE(15,2),CNIT(15,2)
     7,DNR,VDEAD,CVDEAD,VOLUME,CUMVOL,FALL,IMORT,CMORT
      COMMON/EMORT/MORTE(16,4),DMORT,GMORT,TAMORT,VMORTE
      REAL MORTE
      REAL LOGC,LOGCI,LOGDI,LOGVI,LOGCF,LOGDF,LOGVF,LCI,LCM,LOGC1,
     1 LOGC2,MAH,NETRV1,NETRV2
      INTEGER COSTAB,PONTAB,ECO,EUNITS,TYHV
C
C     ************ DEFINITION OF IMPORTANT ECON VARIABLES ************
C
C     A,B,C  = OPTIONAL COEFFICIENTS FOR PONDVL EQUATION        XXXX.XXX
C     CNIT   = TABLE OF FERT. RATES AND COSTS     XXX,XXXX
C     CMORT  = CUM SALVAGE MORTALITY
C     COST   = LOGGING COST CALCULATED FROM USER INPUT COST TABLE OR
C              FROM REVNOW EQUATIONS PER M UNIT VOLUME  XXXX.
C     COSTAB = INDICATOR FOR TABLE OF LOGC VALUES              X
C     CUMVOL = CUM TOTAL VOLUME ADJ. FOR SALVAGE MORTALITY AND/OR FALL
C              IF SELECTED
C     CVDEAD = CMORT/CUMVOL PERCENT VOLUME DEAD FINAL HARVEST
C     D      = DIAM OF CUT TREES TO BE ADJUSTED FOR USE IN COST CALC
C     DBMORT = DBH MORTALITY SET IN SUBROUTINE XMORT
C     DLOSS  = ARRAY STORAGE OF 5 YEAR DBH LOSS INCHES
C     DMORT  = DFSIM VARIABLE DBH MORTALITY
C     DNR    = DISCOUNTED NET REVENUE
C     ECO    = INDICATOR ON MASTER CONTROL CARD FOR ECONOMICS TABLES  X
C     EUNITS = DFSIM UNITS FOR ECONOMICS TABLES                     AAA
C     FAGE   = TABLE OF FERT AGES AND RATES
C     FALL   = SEE VAM                                             XX.X
C     FC     = NO OF DIFFERENT FERT. (UP TO 15)      XXXX
C     FCI    = FERTILIZATION COST INFLATION RATE                    XX.X
C     FHRC   = FIRST HARVEST ROAD COST PER ACRE                    XXXX.
C     FHRCI  = FIRST HARVEST ROAD COST INFLATION RATE               XX.X
C     HAULC1 = HAULING COST PER M UNIT VOLUME                      XXXX.
C     HC     = HAULING COST PER M UNIT VOLUME      XXXX.
C     HCI    = HAULING COST INFLATION RATE                          XX.X
C     IFER   = INDICATOR FIRST HARVEST                          X
C     IMORT  = MORTALITY OPTION INDICATOR                           X
C     INFLAT = INDICATOR FOR INFLATION RATES                    X
C     IORG   = STAND ORIGIN
C     LCI    = LOGGING COST INFLATION RATE                          XX.X
C     LCM    = LOGGING COST MULTIPLIER                              X.XX
C     LDF    = NUMER OF DBH FINAL COST TABLE                  XX
C     LDI    = NUMBER OF DBH INTERM COST TABLE                  X
C     LOGC1  = LOGGING COST PER M UNIT VOLUME                  XXXXX.
C     LOGCF  = TABLE OF FINAL LOGGING COSTS               XXXX.
C     LOGCI  = TABLE OF INTERM LOGGING COSTS           XXXX.
C     LOGDF  = ARRAY OF LOG COST FINAL DIAMETERS      XX.X
C     LOGDI  = ARRAY OF LOG COST INTERM DIAMETERS   XX.X
C     LOGVF  = ARRAY OF LOG COST FINAL VOLUMES ( M UNITS)      XX.XXX
C     LOGVI  = ARRAY OF LOG COST INTERM VOLUMES ( M UNITS)     XX.XXX
C     LVF    = NUMBER OF VOLS FINAL COST TABLE   X
C     LVI    = NUMBER OF VOLS INTERM COST TABLE   X
C     MAH    = MEAN ANNUAL HARVEST IN THOUSANDS                    X.XXX
C     MORTE  = ARRAY STORAGE OF DMORT,TAMORT,VMORTE FOR INTERM HARVESTS
C     NETRV1 = NET REVENUE PER M UNIT VLUME                      XXXXX.
C     OAHC   = OTHER PER ACRE FINAL HARVEST COST                 XXXX.
C     OAHCI  = OTHER PER ACRE HARVEST COST INFLATION RATE          XX.X
C     OATC   = OTHER PER ACRE THINNING COST                      XXXX.
C     OTHRC1 = OTHER HARVEST COST PER M UNIT VOLUME                XXXX.
C     OVHC   = OTHER PER UNIT VOL FINAL HARVEST COST             XXXX.
C     OVHCI  = OTHER PER UNIT VOL HARVEST COST INFLATION RATE      XX.X
C     OVTC   = OTHER PER UNIT VOL THINNING COST                  XXXX.
C     PCT    = TOTAL STAND AGE AT PRECOMMERCIAL THINNING
C     PCTC   = PRECOMMERCIAL THINNING COST PER ACRE              XXXX.
C     PCTCI  = PRECOMMERCIAL THINNING COST INFLATION RATE           XX.X
C     PNW1   = CUMULATIVE PRESENT NET WORTH/ACRE                 XXXXX.
C     PNW2   = CUMULATIVE PRESENT NET WORTH 2ND ROTATION/ACRE    XXXXX.
C     PONDVL = TABLE OF POND VALUE DIAMS AND COSTS       XX.X    XXXX.
C     PONTAB = INDICATOR FOR TABLE OF POND VALUE COSTS     X
C     PNDVL1 = POND VALUE PER M UNIT VOLUME                   XXXXX.
C     PVI    = POND VALUE INFLATION RATE                          XX.X
C     R      = INTEREST RATE                                      XX.X
C     RCI    = REGENERATIN COST INFLATION RATE                    XX.X
C     REGENC = REGENERATION COST PER ACRE                        XXXX.
C     SAGE   = EXISTING STAND TOTAL STAND AGE
C     SEV    = SOIL EXPECTATION VALUE ($ PER ACRE)      XXXXX.
C     SSMORT = MORTALITY PER ACRE ADJUSTED FOR ANY FALLDOWN
C     TAMORT = DFSIM VARIABLE TREES/ACRE MORTALITY
C     TBMORT = TREES/ACRE MORTALITY SET IN SUBROUTINE XMORT
C     TOAGE  = TOTAL STAND AGE
C     TRUED  = ARITHMETIC MEAN DBH OF CUT TREES                   XX.X
C     TYHV   = INDICATOR FOR TYPE OF HARVEST             X
C     VAM    = VOLUME ADJUSTMENT MULTIPLIER        X.XX
C     VBMORT = VOL/ACRE MORTALITY SET IN SUBROUTINE XMORT
C     VDEAD  = % VOL DEAD PER ACRE INTERM HARVESTS
C     VMORTE = DFSIM VARIABLE VOL/ACRE MORTALITY
C     VOL    = VOLUME OF CUT TREES FOR USE IN COST CALCULATION
C              (USER SELECTED UNITS)
C     VOLM   = VOLUME OF CUT TREES (M UNITS)
C     VOLUME = VOL/ACRE ON PRINT OF EACH HARVEST
C
C      *****************************************************************
C  NOTE: ALL INFLATION RATES ARE STORED IN DECIMAL FORM
C
      IUOUT = 6
      VOL=VVOL
      VAM=FALL
C
C  MORTALITY OPTION
C
         SSMORT=0.0
         VDEAD=0.0
      IF (IMORT.GE.1) THEN
         CALL XMORT(DLIM,SSMORT)
      END IF
C
C  CHECK FOR VOL ADJUSTMENT MULTIPLIER AND ADJUST VOL AND MORTALITY
      IF (VAM.GT.0.0) THEN
         VOL=VOL*VAM
         IF (VOL.LE.0.0) VOL=0.0
         SSMORT=SSMORT*VAM
         IF (SSMORT.LE.0.0) SSMORT=0.0
      END IF
C
C  ADD MORTALITY TO VOL AND USE FOR ALL FURTHER CALCULATIONS
      VOL=VOL+SSMORT
      CMORT=CMORT+SSMORT
      IF (IMORT.GE.1.AND.VOL.GT.0.0) VDEAD=SSMORT/VOL*100.
C  CALCULATE YAGE
      YAGE=TOAGE - SAGE
      IF (YAGE.GE.50) YAGE=50
C
C  CALCULATE ARITH. MEAN DBH OF CUT TREES - TRUED
      IF (IORG.NE.1) GO TO 1
          IF (D .GE. 20.37)  GO TO 100
             TRUED = .8826*D**1.04143
             GO TO 200
  100     CONTINUE
             TRUED = D
  200     CONTINUE
          IF (PCT.NE.0) TRUED=.9561*D**1.01015
          GO TO 2
    1 CONTINUE
      TRUED=.8488*D**1.04143
      IF (PCT.NE.0) TRUED=.9139*D**1.01951
    2 CONTINUE
       PNDVL2=0.0
       LOGC2=0.0
       HAULC2=0.0
       OTHRC2=0.0
       PNDVL1=0.0
       LOGC1=0.0
       HAULC1=0.0
       OTHRC1=0.0
      VOLUME=0.0
C
      IF (VOL.LE.0.0) GO TO 23
C  UPDATE VOLM - USER UNITS/1000
      VOLM=VOL*.001
C
C  CALCULATE HAULC1,HAULC2
      HAULC2=HC*(1 + HCI)**50
      HAULC1=HC*(1 + HCI)**YAGE
C
C  CALCULATE OTHRC2,OTHRC1 EACH HARVEST
      OTHRC2=OATC*(1+OAHCI)**50/VOLM+OVTC*(1+OVHCI)**50
      OTHRC1=OATC*(1+OAHCI)**YAGE/VOLM+OVTC*(1+OVHCI)**YAGE
C
C  ADJUST OTHRC2,OTHRC1 IF FINAL HARVEST
      IF (TYHV.NE.2) GO TO 4
          OTHRC2=OAHC*(1+OAHCI)**50/VOLM+OVHC*(1+OVHCI)**50
          OTHRC1=OAHC*(1+OAHCI)**YAGE/VOLM+OVHC*(1+OVHCI)**YAGE
    4 CONTINUE
C
C  ADJUST OTHRC1 IF FIRST HARVEST
      IF (IFER.NE.0) GO TO 3
          FHRC1=FHRC*(1+FHRCI)**YAGE/VOLM
          OTHRC1=OTHRC1+FHRC1
      CUMVOL=0.0
          IFER=1
    3 CONTINUE
C
C  CALCULATE LOGC1,LOGC2 PER M UNIT VOL
C
      IF (COSTAB.LE.0) GO TO 12
C  CASE 1: INTERM HARVEST TABLE
C
      IF (TYHV.EQ.2.AND.COSTAB.EQ.2) GO TO 10
              COST=LOGC(LOGCI,LOGDI,LOGVI,LDI,LVI,TRUED,VOL)
              GO TO 14
   10 CONTINUE
C
C  CASE 2: FINAL HARVEST TABLE
C
      COST=LOGC(LOGCF,LOGDF,LOGVF,LDF,LVF,TRUED,VOL)
      GO TO 14
   12 CONTINUE
C
C  CASE 3: NO TABLE - CALC FROM REVNOW EQUATIONS
C
      COST=REVNOW(VOL,TRUED)
   14 CONTINUE
      LOGC2=COST*LCM*(1+LCI)**50
      LOGC1=COST*LCM*(1+LCI)**YAGE
C
C  CALCULATE PNDVL1,PNDVL2
C
C  CASE 1: PONDVL TABLE
C
      IF (.NOT.(PONTAB.GT.1)) GO TO 18
          PNDVL=PONDV(PONDVL,PONTAB,TRUED)
          GO TO 20
   18 CONTINUE
C
C  CASE 2: PNDVL USING A,B,C COEFFICIENTS
C
      PNDVL=(A+B*TRUED+C*TRUED**2)
   20 CONTINUE
      PNDVL2=PNDVL*(1.+PVI)**50
      PNDVL1=PNDVL*(1.+PVI)**YAGE
C
   23 CONTINUE
C  CALCULATE NET REVENUE
      NETRV2=PNDVL2-LOGC2-HAULC2-OTHRC2
      NETRV1=PNDVL1-LOGC1-HAULC1-OTHRC1
C
C  CALCULATE DISCOUNTED NET REVENUE
C
      DNR=NETRV1/(1+R)**(TOAGE-SAGE)
C
C  CALCULATE FERTILIZER EFFECT
C
       IF (FC.LE.0) GO TO 27
      DO 25 J=1,15
         IF (FAGE(J,1).GT.TOAGE) GO TO 25
             IF (FAGE(J,1).LE.0.0) GO TO 27
             DO 24 I=1,FC
                IF (CNIT(I,1).NE.FAGE(J,2)) GO TO 24
                    FERT=CNIT(I,2)
                    GO TO 28
   24   CONTINUE
         STOP
   28 CONTINUE
                PNW2=PNW2-FERT*(1+FCI)**50/(1.0+R)**FAGE(J,1)
                PNW1=PNW1-FERT*(1+FCI)**YAGE/(1.0+R)**(TOAGE-SAGE)
                FAGE(J,1)=500.
   25 CONTINUE
   27 CONTINUE
C
C  ACCUMULATE PRESENT NET WORTHS AND VOLUME
      PNW2=PNW2+NETRV2*VOLM/(1.+R)**TOAGE
      PNW1=PNW1+NETRV1*VOLM/(1.+R)**(TOAGE-SAGE)
      CUMVOL=CUMVOL + VOL
      VOLUME=VOL*.001
C
C  CALCULATE SOIL EXPECT VALUE AND MEAN ANNUAL HARVEST AT FINAL HARVEST
      IF(TYHV.NE.2) GO TO 6
          SEV=0.0
          IF (R.LE.0.0) THEN
             WRITE (IUOUT,30)
   30        FORMAT (1X,31('*'),/,' * SEV HAS NO MEANING WHEN THE *',/,
     1        ' *    INTEREST RATE IS ZERO    *',/,1X,31('*')/)
             GO TO 7
          END IF
          SEV=PNW1+PNW2/((1.+R)**TOAGE-1.)
C
C  CORRECT IF REGENERATION BEFORE AGE 50
          IF(TOAGE.GE.50) GO TO 5
              SEV=SEV+REGENC*((1.+RCI)**50-(1.+RCI)**TOAGE)/
     1        (1.+R)**TOAGE
    7         PNW2=PNW2+REGENC*((1.+RCI)**50-(1.+RCI)**TOAGE)
    5 CONTINUE
              MAH=CUMVOL/TOAGE
              CVDEAD=0.0
              IF (CUMVOL.NE.0.0) CVDEAD=CMORT/CUMVOL*100.
    6 CONTINUE
      IF (SAGE.GT.0.0) THEN
       PNW2=0.0
       SEV=0.0
       END IF
C      PRINT *,((MORTE(KK,KKK),KKK=1,4),KK=1,16)
      RETURN
      END
      REAL FUNCTION LOGC(LOGCOS,LOGDIA,LOGVOL,LR,LC,DIAM,VOL)
C
C  RETURN LOG COST FROM USER TABLE
C
      REAL LOGCOS(12,12),LOGDIA(12),LOGVOL(12),VOLC(12)
C  INTERPOLATION FUNCTION
       POLE(B1,B2,A1,A2,X)=B1+(X-A1)*(B2-B1)/(A2-A1)
C
C  FIND LIMIT DIAMETERS AND LOGCOS ARRAY ROW SUBSCRIPTS
      D=DIAM
      IF (D.LT.LOGDIA(1)) D=LOGDIA(1)
      DO 5 I=1,LR
      IF(D.GT.LOGDIA(I)) GO TO 5
C
C  SAVE LIMIT DIAMETERS AND LOGCOS ARRAY SUBSCRIPTS
      IF (I.GT.1) GO TO 4
      IDL=I
      IDU=I
      DL=LOGDIA(I)
      DU=LOGDIA(I)
          GO TO 7
    4 CONTINUE
      DL=LOGDIA(I-1)
      DU=LOGDIA(I)
      IDL=I-1
      IDU=I
      GO TO 7
    5 CONTINUE
C
C  SAVE ABOVE IF DIAMETER CUT TREES.GT.TABLE
      DL=LOGDIA(LR)
        DU=LOGDIA(LR)
        IDL=LR
        IDU=LR
    7 CONTINUE
C
C  FIND LIMIT VOLUMES AND LOGCOS ARRAY COLUMN SUBSCRPTS
C  CONVERT VOLC TO ACTUAL
      DO 8 I=1,LC
    8 VOLC(I)=LOGVOL(I)*1000
      IF (VOL.LT.VOLC(1)) VOL=VOLC(1)
      DO 9 I=1,LC
      IF (VOL.GT.VOLC(I)) GO TO 9
C
C  SAVE LIMIT VOLUMES AND LOGCOS ARRAY COLUMN SUBSCRIPTS
      IF (I.GT.1) GO TO 11
       IVL=I
       IVU=I
       VL=VOLC(I)
       VU=VOLC(I)
          GO TO 10
   11 CONTINUE
      VL=VOLC(I-1)
      VU=VOLC(I)
      IVL=I-1
      IVU=I
      GO TO 10
    9 CONTINUE
C
C  SAVE ABOVE IF VOLUME CUT TREES.GT.TABLE
       VL=VOLC(LC)
       VU=VOLC(LC)
       IVL=LC
       IVU=LC
   10 CONTINUE
C
C  CALCULATE LOG COST PER M UNITS VOL
C
      DLC1=LOGCOS(IDL,IVL)
      DUC1=LOGCOS(IDU,IVL)
      DLC2=LOGCOS(IDL,IVU)
      DUC2=LOGCOS(IDU,IVU)
C
C  CASE 1: DIAM AND VOL OUTSIDE TABLE RANGE
C
      IF (.NOT.(IDL.EQ.IDU.AND.IVL.EQ.IVU)) GO TO 12
      IF (D.LE.LOGDIA(1)) LOGC=LOGCOS(1,1)
      IF (D.GT.LOGDIA(LR)) LOGC=LOGCOS(LR,LC)
      GO TO 27
   12 CONTINUE
C
C  CASE 2: DIAM AND/OR VOL WITHIN TABLE RANGE
C
C  CHECK AND FIX SO DIFFERENCE IS ONE
      IF (DL.EQ.DU) DU=DL+1
      IF (VL.EQ.VU) VU=VL+1
C
      DC1=POLE(DLC1,DUC1,DL,DU,D)
      DC2=POLE(DLC2,DUC2,DL,DU,D)
      LOGC=POLE(DC1,DC2,VL,VU,VOL)
   27 RETURN
      END
      FUNCTION REVNOW(VOL,D)
C
C  CAUTION:  THESE LOGGING COSTS ARE APPROPRIATE FOR CUBIC VOL UNITS
C            ONLY.
      IF(D.GT.6.05) GOTO 5
      COST=7790.9*VOL**(-0.2834)
      GOTO 150
    5 IF(D.GT.7.63) GOTO 10
      IF(VOL.GT.1000.) GOTO 7
      C1=7790.9*VOL**(-.2834)
      C2=4954.7*VOL**(-.2726)
      DELTA=(C1-C2)/(7.63-6.05)
      COST=C1-DELTA*(D-6.05)
      GOTO 150
    7 C1=7800.8*VOL**(-.2539)
      C2=7187.5*VOL**(-.2891)
      DELTA=(C1-C2)/(7.63-6.05)
      COST=C1-DELTA*(D-6.05)
      GOTO 150
   10 IF (D.GT.9.23) GO TO 20
      IF(VOL.GT.1000.) GOTO 15
      C1=4954.7*VOL**(-.2726)
      C2=3768.0*VOL**(-.2662)
      DELTA=(C1-C2)/(9.23-7.63)
      COST=C1-DELTA*(D-7.63)
      GOTO 150
   15 IF(VOL.GT.2000.) GOTO 18
      C1=7187.5*VOL**(-.2891)
      C2=6524.8*VOL**(-.3013)
      DELTA=(C1-C2)/(9.23-7.63)
      COST=C1-DELTA*(D-7.63)
      GOTO 150
   18 C1=14353.0*VOL**(-.3782)
      C2=10336.6*VOL**(-.3627)
      DELTA=(C1-C2)/(9.23-7.63)
      COST=C1-DELTA*(D-7.63)
      GOTO 150
   20 IF(D.GT.10.87) GOTO 30
      IF(VOL.GT.1000.) GOTO 25
      C1=3768.0*VOL**(-.2662)
      C2=4375.0*VOL**(-.2833)
      DELTA=(C1-C2)/(10.87-9.23)
      COST=C1-DELTA*(D-9.23)
      GOTO 150
   25 IF(VOL.GT.2000.) GOTO 28
      C1=6524.8*VOL**(-.3013)
      C2=4375.0*VOL**(-.2833)
      DELTA=(C1-C2)/(10.87-9.23)
      COST=C1-DELTA*(D-9.23)
      GOTO 150
   28 C1=10336.6*VOL**(-.3627)
      C2= 8479.6*VOL**(-.3626)
      DELTA=(C1-C2)/(10.87-9.23)
      COST=C1-DELTA*(D-9.23)
      GOTO 150
   30 IF(D.GT.12.31) GOTO 40
      C1=8479.6*VOL**(-.3626)
      C2=6839.5*VOL**(-.3492)
      DELTA=(C1-C2)/(12.31-10.87)
      COST=C1-DELTA*(D-10.87)
      GOTO 150
   40 IF(D.GT.13.66) GOTO 50
      C1=6839.5*VOL**(-.3492)
      C2=6276.4*VOL**(-.3498)
      DELTA=(C1-C2)/(13.66-12.31)
      COST=C1-DELTA*(D-12.31)
      GOTO 150
   50 IF(D.GT.15.03) GOTO 60
      C1=6276.4*VOL**(-.3498)
      C2=5848.5*VOL**(-.3548)
      DELTA=(C1-C2)/(15.03-13.66)
      COST=C1-DELTA*(D-13.66)
      GOTO 150
   60 IF(D.GT.16.19) GOTO 70
      C1=5848.5*VOL**(-.3548)
      C2=4980.1*VOL**(-.3475)
      DELTA=(C1-C2)/(16.19-15.03)
      COST=C1-DELTA*(D-15.03)
      GOTO 150
   70 IF(D.GT.17.26) GOTO 80
      C1=4980.1*VOL**(-.3475)
      C2=3765.6*VOL**(-.3238)
      DELTA=(C1-C2)/(17.26-16.19)
      COST=C1-DELTA*(D-16.19)
      GOTO 150
   80 IF(D.GT.18.31) GOTO 90
      C1=3765.6*VOL**(-.3238)
      C2=4215.0*VOL**(-.3402)
      DELTA=(C1-C2)/(18.31-17.26)
      COST=C1-DELTA*(D-17.26)
      GOTO 150
   90 IF(D.GT.20.25) GOTO 100
      C1=4215.0*VOL**(-.3402)
      C2=3377.5*VOL**(-.3207)
      DELTA=(C1-C2)/(20.25-18.31)
      COST=C1-DELTA*(D-18.31)
      GOTO 150
  100 IF(D.GT.21.90) GOTO 110
      C1=3377.5*VOL**(-.3207)
      C2=4209.5*VOL**(-.3488)
      DELTA=(C1-C2)/(21.9-20.25)
      COST=C1-DELTA*(D-20.25)
      GOTO 150
  110 COST=4209.5*VOL**(-.3488)
  150 CONTINUE
      REVNOW=COST
      RETURN
      END
      FUNCTION PONDV(PONDVL,PONTAB,D)
C
C  RETURN PNDVL COST FROM USER TABLE
C
      DIMENSION PONDVL(8,2)
      INTEGER PONTAB
       POLE(DL,DU,CL,CU,D)=CL+(CU-CL)*(D-DL)/(DU-DL)
      DO 5 I=1,PONTAB
      IF (D.GT.PONDVL(I,1)) GO TO 5
      IF ((PONDVL(I,1)-D).GE..1) GO TO 9
      PONDV=PONDVL(I,2)
      GO TO 10
    9 CONTINUE
      DL=PONDVL(I-1,1)
      DU=PONDVL(I,1)
      CL=PONDVL(I-1,2)
      CU=PONDVL(I,2)
      PONDV=POLE(DL,DU,CL,CU,D)
      GO TO 10
    5 CONTINUE
C  VALUE OUTSIDE TABLE RANGE
      PONDV=PONDVL(PONTAB,2)
   10 RETURN
      END
      SUBROUTINE EOUT
C
C     PRINT ECONOMICS TABLE AND RUN PARAMETERS
C
      COMMON/ECONO/ A,B,C,COSTAB,ECO,EUNITS,FC,FCI,FHRC,FHRCI,HAULC1,
     1 HC,HCI,IFER,
     1 LCI,LCM,LDF,LDI,LOGC1,LOGCF(12,12),LOGCI(12,12),
     2 LOGDF(12),LOGDI(12),LOGVF(12),LOGVI(12),LVF,LVI,
     3 MAH,NETRV1,OAHC,OAHCI,OATC,OTHRC1,OVHC,OVHCI,
     4 OVTC,PCTC,PCTCI,PNW1,PNW2,PNDVL1,PONDVL(8,2),PONTAB,
     5 PVI,R,RCI,REGENC,SEV,TRUED,TYHV,VOLM,FAGE(15,2),CNIT(15,2)
     7,DNR,VDEAD,CVDEAD,VOLUME,CUMVOL,FALL,IMORT,CMORT
      COMMON/EMORT/MORTE(16,4),DMORT,GMORT,TAMORT,VMORTE
C
      REAL LOGCI,LOGDI,LOGVI,LOGCF,LOGDF,LOGVF,LCI,LCM,LLCI,
     1 LOGC1,MAH,NETRV1,MORTE
C
      INTEGER COSTAB,PONTAB,ECO,EUNITS,TYHV
C
      CHARACTER LABEL(3)*6,UNITS*3,Z*1
C
      DATA LABEL /'INTERM','EDIATE','FINAL '/,Z/' '/
C
    4 FORMAT (8X,'COSTS AND REVENUES ARE IN $ PER 1000',/,
     1        8X,'PRESENT NET WORTHS ARE IN $ PER ACRE',/)
C
    5 FORMAT(5X,'ECONOMICS TABLES UNITS:',27X,A)
C
    6 FORMAT(5X,F4.1,12(F7.0))
C
    7 FORMAT(/,5X,'THE FOLLOWING VALUES HAVE BEEN INPUT:'
     1 ,11X,'VALUE  COST TREND',/,53X,5(1H-),2X,10(1H-),/
     2 ,8X,'VOLUME ADJUSTMENT MULTIPLIER',19X,F4.2,/,
     3 8X,'INTEREST RATE  ',31X,F4.1,/,
     4 8X,'PRICE TREND ',34X,F4.1,/,
     5 8X,'REGENERATION COST PER ACRE  ',16X,F6.1,5X,F4.1,/,
     4 8X,'PRECOMMERCIAL THIN COST PER ACRE  ',10X,F6.1,5X,F4.1)
C
    8 FORMAT (3X,'TRUE    VOL   POND    LOG  HAUL  OTHER    NET',
     1 '    DISC NET   PNW1   PNW2  %VOL',/,
     2 4X,'DBH         VALUE   COST  COST   COST  REVENUE  REVENUE'
     3 ,17X,'DEAD',/)
C
    9 FORMAT(1X,'SOIL EXPECTATION VALUE',19X,F8.0,/,
     1 1X,'MEAN ANNUAL HARVEST',22X,F8.0,/,
     2 1X,'PERCENT OF VOLUME FROM MORTALITY OPTION',2X,F8.1)
C
   11 FORMAT (2(2X,F5.2),2(2X,F5.0),1X,F5.0,F7.0,F8.0,2F9.0,F7.0,F6.1
     1 ,///)
C
   55 FORMAT (
     1 5X,'THE FOLLOWING TABLE OF POND VALUES HAS BEEN ENTERED:',/,
     2 5X,'DBH   ',8(1X,F6.1),/,5X,'PONDVL',8(F7.1))
C
   56 FORMAT(
     1 5X,'THE FOLLOWING PONDVL COEFFICIENTS HAVE BEEN ENTERED:',/,
     2 7X,3(G14.8))
C
   57 FORMAT (/,
     1 5X,'THE FOLLOWING TABLE OF LOGGING COST VALUES HAS BEEN ENTERED:'
     2 ,/,20X,A,A,1X,
     3 'LOGGING COST',/,5X,'DIAM.   ',10X,'VOLUME (M UNITS)',/,
     4 9X,12(F7.3),/)
C
   60 FORMAT (5X,'SALVAGE OF MORTALITY OPTION',23X,'YES')
C
   66 FORMAT(/,6X,'THE ABOVE TABLE OF LOGGING COST VALUES WILL BE USED'
     1, ' FOR FINAL HARVEST.')
C
   70 FORMAT (/,5X,'THE FOLLOWING TABLE OF FERTILIZATION RATES',
     1  ' AND COSTS HAS BEEN ENTERED')
C
   72 FORMAT (5X,6(1X,F4.0,F5.0))
C
   73 FORMAT (/,6X,'FERTILIZATION COST TREND  ',30X,F4.1)
C
   77 FORMAT(
     1 8X,'LOGGING COST MULTIPLIER',24X,F4.2,4X,F4.1,/,
     2 8X,'OTHER PER ACRE THIN COST',20X,F6.1,5X,F4.1,/,
     3 8X,'OTHER PER M UNIT VOLUME THIN COST',11X,F6.1,5X,F4.1,/,
     4 8X,'OTHER PER ACRE FINAL HARVEST COST',11X,F6.1,5X,F4.1,/,
     5 8X,'OTHER PER M UNIT VOLUME FINAL HARVEST COST',2X,F6.1,
     6 5X,F4.1,/,
     7 8X,'HAULING COST PER M UNIT VOLUME',14X,F6.1,5X,F4.1,/,
     8 8X,'FIRST HARVEST ROAD COST PER ACRE  ',10X,F6.1,5X,F4.1,/)
C
C  SET UNITS
C
      IF (EUNITS.EQ.1) THEN
         UNITS='CV4'
      ELSE IF (EUNITS.EQ.2) THEN
         UNITS='CV6'
      ELSE IF (EUNITS.EQ.3) THEN
         UNITS='IV6'
      ELSE IF (EUNITS.EQ.4) THEN
          UNITS='SV6'
       ELSE
       END IF
C
C  PRE HARVEST
C
      IF (TYHV.EQ.0) THEN
C
          PRINT 5,UNITS
          PRINT 4
C
          IF (IMORT.GE.1) PRINT 60
C
          IF (PONTAB.GE.1) THEN
              PRINT 55,((PONDVL(I,J),I=1,8),J=1,2)
          ELSE IF (PONTAB.LE.0) THEN
              PRINT 56,A,B,C
          ELSE
          END IF
C
          IF (COSTAB.GE.1) THEN
              PRINT 57,LABEL(1),LABEL(2),(LOGVI(I),I=1,LVI)
C
              DO 12 I=1,LDI
                  PRINT 6,LOGDI(I),(LOGCI(I,J),J=1,LVI)
   12         CONTINUE
C
              IF (COSTAB.EQ.1) PRINT 66
          END IF
C
          IF (COSTAB.EQ.2) THEN
              PRINT 57,LABEL(3),Z,(LOGVF(I),I=1,LVF)
C
              DO 13 I=1,LDF
                  PRINT 6,LOGDF(I),(LOGCF(I,J),J=1,LVF)
   13         CONTINUE
C
          END IF
C
C  FERTILIZATION SPECIFIED
C
          IF (FC.GT.0.AND.FC.LE.15) THEN
              PRINT 70
              PRINT 72, ((CNIT(I,J),J=1,2),I=1,FC)
              PRINT 73,FFCI
          END IF
C
C  CONVERT DECIMAL FORM TO RATES FOR OUTPUT
C
          RR=R*100
          PPVI=PVI*100
          RRCI=RCI*100
          PPCTCI=PCTCI*100
          FFCI=FCI*100
          LLCI=LCI*100
          OOAHCI=OAHCI*100
          OOVHCI=OVHCI*100
          HHCI=HCI*100
          FFHRCI=FHRCI*100
C
          PRINT 7,FALL,RR,PPVI,REGENC,RRCI,PCTC,PPCTCI
C
          PRINT 77,LCM,LLCI,OATC,OOAHCI,OVTC,OOVHCI,OAHC,OOAHCI,
     1    OVHC,OOVHCI,HC,HHCI,FHRC,FFHRCI
C
      END IF
C
C  HARVEST
C
      IF (TYHV.NE.0) THEN
          PRINT 8
          PRINT 11,TRUED,VOLUME,PNDVL1,LOGC1,HAULC1,OTHRC1,
     1    NETRV1,DNR,PNW1,PNW2,VDEAD
      END IF
C
C  FINAL HARVEST
C
      IF (TYHV.EQ.2) THEN
          PRINT 9,SEV,MAH,CVDEAD
      END IF
C
      RETURN
      END
      SUBROUTINE READIN
C
C     READ CONTROL DECK FOR SIMULATION
C
C     IUIN IS INPUT FLE - TAPE5
C     IUOUT IS OUTPUT - TAPE6
C
      DIMENSION AGEF(16), AGET(16), ARG(16), DR(16), FNLBS(16), GRESD(16
     $), H40(16), HY40(16), ITITLE(20), LIUT(16), OBSAGE(31), PNIT(16),
     $PNITF(16), RAN(76), TTN(16), D(16,4), GA(16,4), OBSHTS(2,31),
     $ TARESD(16), TA(16,4), VA(16,4)
      DIMENSION D56(16), D76(16), DC56(16), DC76(16), G56(16), G76(16),
     $GC56(16), GC76(16), VA56(16), VA456(16), VA76(16), VA476(16),
     $ VAA56(16), VAA456(16), VAA76(16), VAA476(16), VAC56(16), VAC456
     $(16), VAC76(16), VAC476(16), SVC456(16), SVC476(16)
      COMMON AGE,AGEF,AGET,AHARR,AHARV,ARG,ASYMP,BAB,BAC,BAPA,CAI,CT1,D,
     $DDMRT,DLIM,DMTMIN,DNOW,DR,FCTA,FERTEF,FNLBS,GA,GRESD,H40,HAT,HPCT,
     $HS,HTHARV,HY40,ICT1,IDR,IOBS,IORG,IPAGE,IQ,IRD,ITHN,ITITLE,IUT,IZ,
     $JRD,LINE,LIUT,LTREE,NRA,OBSAGE,OBSHTS,TARESD,PCT,PCTA,PNIT,PNITF,
     $RAN,SAGE,SBA,SCUTVA,SDIA,SGMORT,SI,SNMORT,STA,SVMORT,TA,TTN,VA,
     $VGNOW,VNOW,XMAI16,XMAI56,XMAI76,XNUM,XNUMR,ISTOP,RATMAI,
     $rdasymp,isv
      COMMON D56,D76,DC56,DC76,G56,G76,GC56,GC76,VA56,VA456,VA76,VA476,
     $VAA56,VAA456,VAA76,VAA476,VAC56,VAC456,VAC76,VAC476,SVC456,SVC476
      COMMON CTAS,DC,DH,EXIST,FCT,FERTAS,FERTCT,FIH,IHEAD,FIY,GCLIM,GLIM
     $,HFCT,IGS,IMV,NCT,SCTHT,SCUT45,SCUT47,SCUTBA,SCUTTA,TAST,TI,AGEADD
      INTEGER CTAS,EXIST,FERTAS,FERTCT,SCTHT
      COMMON /ECONO/ A,B,C,COSTAB,ECO,EUNITS,FC,FCI,FHRC,FHRCI,
     $HAULC1,HC,HCI,IFER,
     $LCI,LCM,LDF,LDI,LOGC1,LOGCF(12,12),LOGCI(12,12),
     $LOGDF(12),LOGDI(12),LOGVF(12),LOGVI(12),LVF,LVI,
     $MAH,NETRV1,OAHC,OAHCI,OATC,OTHRC1,OVHC,OVHCI,
     $OVTC,PCTC,PCTCI,PNW1,PNW2,PNDVL1,PONDVL(8,2),PONTAB,
     $PVI,R,RCI,REGENC,SEV,TRUED,TYHV,VOLM,FAGE(15,2),CNIT(15,2)
     7,DNR,VDEAD,CVDEAD,VOLUME,CUMVOL,FALL,IMORT,CMORT
       COMMON/CHAR/ CTITLE
       CHARACTER*3 CTITLE*80,vers*8,END,ICV4,ICV6,IV6,ISV6,UNITS
      REAL LOGC1,LOGCF,LOGCI,LOGDF,LOGDI,LOGVF,LOGVI,MAH,NETRV1,LCI,LCM
      INTEGER COSTAB,ECO,EUNITS,PONTAB,TYHV
      DATA END/'END' /
      DATA ICV4,ICV6,IV6,ISV6/'CV4','CV6','IV6','SV6'/
C
      IUIN=3
      IUOUT=6
C
C      TITLE CARD
C
       READ (IUIN,10,END=4001) CTITLE
   10 FORMAT (A)
      IF (CTITLE(1:3) .EQ. END) GO TO 320
C
C     MASTER CONTROL CARD (CARD TYPE 0)
C
      READ (IUIN,20,END=4003) SI,IORG,PCT,TAST,IOBS,EXIST,IUT,NCT,FCT,
     $TI,FIY,CTAS,
     $AHARR,DH,FIH,SCTHT,HTHARV,IDR,IGS,LTREE,DLIM,GCLIM,GLIM,FERTCT,
     $FERTAS,IMV,NRA,ECO,isv,rdasymp
   20 FORMAT (F3.0,1X,I1,1X,F2.0,1X,F4.0,3(1X,I1),1X,I2,3(1X,F2.0),1X,I1
     $,1X,F3.0,2(1X,F2.0),1X,I1,1X,F3.0,1X,3(I1,1X),F3.1,1X,F2.0,1X,F3.0
     $,1X,6(I1,1X),f4.1)
      if (rdasymp.le.0.0) rdasymp = 70.0
      rdasymp = 0.94 * rdasymp
      IF (SI.LE.0.0) SI = 105.0
      IF (NCT.GT.15) NCT = 15
      IF (EXIST.NE.1) GO TO 40
C
C     EXISTING STAND CARD (CARD TYPE 1)
C
      READ (IUIN,30,END=4005) SAGE,SDIA,SBA,STA
   30 FORMAT (F3.0,1X,F4.2,1X,F4.1,1X,F5.0)
      IF (SBA.EQ.0.0.AND.SDIA.GT.0.0.AND.STA.GT.0.0) SBA = STA*.
     $005454154*SDIA**2
      IF (SDIA.GT.0.0.AND.STA.EQ.0.0) STA = ((SBA/.005454154)/SDIA**2)
      IF (SDIA.EQ.0.0.AND.STA.GT.0.0) SDIA = ((SBA/STA)/.005454154)**.5
   40 CONTINUE
      IF (IORG.LE.0.AND.PCT.LE.0.0) TAST = 0.0
      IF (IORG.GT.0.AND.TAST.LE.0.0.OR.PCT.GT.0.0.AND.TAST.LE.0.0)
     $ TAST = 400.0
      XNUMR = TAST
      IF (AHARR.GT.0.0) AHARV = BHAGE(AHARR,SI)
      IF (FCT.GT.0.0) FCTA = BHAGE(FCT,SI)
      IF (PCT.GT.0.0) PCTA = BHAGE(PCT,SI)
      IF (PCTA.LE.0.0.AND.PCT.GT.0.0) PCTA = 2
      IF (CTAS.NE.1) GO TO 90
C
C     SPECIFIED COMMERCIAL THINNING AGE CARD (CARD TYPE 2)
C
      READ (IUIN,50,END=4007) (AGET(I),I=1,16)
   50 FORMAT (16(2X,F3.0))
      DO 60 I=1,15
      IF (AGET(I).LE.0.0) GO TO 70
   60 CONTINUE
   70 CONTINUE
      NCT = I
   80 NCT = NCT-1
      IF (NCT.LE.1) GO TO 90
      IF (AHARR.LE.0.0) AHARR = AGET(NCT)
      IF (AHARR.GT.0.0.AND.AGET(NCT).GE.AHARR) NCT = NCT-1
      IF (AHARR.GT.0.0.AND.AGET(NCT).LT.AHARR) AGET(NCT+1) = AHARR
      IF (AGET(NCT).GE.AHARR) GO TO 80
      AHARV = BHAGE(AHARR,SI)
      FCTA = BHAGE(AGET(1),SI)
      FCT = AGET(1)
   90 CONTINUE
      IF (SCTHT.NE.1) GO TO 130
C
C     SPECIFIED COMMERCIAL THINNING HEIGHT CARD (CARD TYPE 3)
C
      READ (IUIN,50,END=4009) (HY40(I),I=1,15)
      DO 100 I=1,15
      IF (HY40(I).LE.0.0) GO TO 110
  100 CONTINUE
  110 CONTINUE
      NCT = I
  120 NCT = NCT-1
      IF (NCT.LE.1) GO TO 130
      IF (AHARR.LE.0.0.AND.HTHARV.LE.0.0) HTHARV = HY40(NCT)
      IF (HTHARV.GT.0.0.AND.HY40(NCT).GE.HTHARV) NCT = NCT-1
      IF (HTHARV.GT.0.0.AND.HY40(NCT).LT.HTHARV) HY40(I+1) = HTHARV
      IF (HY40(NCT).GE.HTHARV.AND.HTHARV.GT.0.0) GO TO 120
  130 CONTINUE
      IF (IDR.LE.0) GO TO 150
C
C     DCUT / DBEFORE CUT RATIO CARD (CARD TYPE 4)
C
      READ (IUIN,140,END=4011) (DR(I),I=1,15)
  140 FORMAT (15(2X,F3.2))
  150 CONTINUE
      IF (IGS.NE.1) GO TO 160
C
C     RESIDUAL BASAL AREA CARD (CARD TYPE 5)
C
      READ (IUIN,50,END=4013) (GRESD(I),I=1,15)
  160 CONTINUE
      IF (LTREE.NE.1) GO TO 180
C
C      RESIDUAL NUMBER TREES CARD (CARD TYPE 6)
C
      READ (IUIN,170,END=4015) (TARESD(I),I=1,15)
  170 FORMAT (15(1X,F4.0))
  180 CONTINUE
      IF (FERTCT.LE.0) GO TO 190
      II = FERTCT
      FERTAS = 0
      GO TO 200
C
  190 CONTINUE
      IF (FERTAS.LE.0) GO TO 230
      II = FERTAS
      FERTCT = 0
  200 CONTINUE
C
C     FERTILIZATION CARD(S) (CARD TYPE 7)
C
      DO 220 J=1,II
      K = (J - 1) * 9 + 1
      JJ = 9
      IF (J.EQ.2) JJ = 15
      READ (IUIN,210,END=4017) (AGEF(I),PNIT(I),I=K,JJ)
  210 FORMAT (18(1X,F3.0))
  220 CONTINUE
  230 CONTINUE
      IF (NRA.LE.0.0.OR.NRA.GE.5) GO TO 260
C
C     REPORT AGES CARD(S) (CARD TYPE 8)
C
      DO 250 I=1,NRA
      J = (I - 1) * 19 + 1
      JJ = J + 18
      READ (IUIN,240,END=4019) (RAN(II),II=J,JJ)
  240 FORMAT (19(1X,F3.0))
  250 CONTINUE
  260 CONTINUE
C  EEEEEEEEEE
C     ECONOMICS OPTION
C
      IF (ECO.NE.1) GO TO 265
C
C      ECON CONTROL CARD (CARD TYPE 10)
      READ (IUIN,2601,END=4021) UNITS,PONTAB,COSTAB,LDI,LVI,
     1 LDF,LVF,A,B,C,IMORT,FALL
 2601 FORMAT (1X,A3,1X,I2,1X,I1,2X,4(1X,I2),3(1X,G14.8),I2,F5.2)
C
C     CHECK VALIDITY OF EUNITS
      IF (UNITS.EQ.ICV4) THEN
         EUNITS=1
      ELSE IF (UNITS.EQ.ICV6) THEN
         EUNITS=2
      ELSE IF (UNITS.EQ.IV6) THEN
         EUNITS=3
      ELSE IF (UNITS.EQ.ISV6) THEN
         EUNITS=4
      ELSE
      WRITE (IUOUT,2625) UNITS
 2625 FORMAT (' INVALID ECONOMICS UNITS',A)
      GO TO 2602
      END IF
C
C     ECON CONTROL CARD (CARD TYPE 11)
      READ (IUIN,2604,END=4023) R,REGENC,PCTC,FC,LCM,FHRC,OATC,OVTC,
     1 OAHC,OVHC,HC,INFLAT
 2604 FORMAT (1X,F4.1,3(1X,F5.0),1X,F4.2,6(1X,F5.0),1X,I1)
C
      R=R*.01
C
C     ECON CONTROL CARD INFLATION RATES (CARD TYPE 12)
      IF (INFLAT.NE.1) GO TO 2606
      READ (IUIN,2605,END=4025) PVI,RCI,PCTCI,FCI,LCI,FHRCI,OAHCI,
     1 OVHCI,HCI
 2605 FORMAT (9(1X,F4.1))
C     CHANGE TO DECIMAL FORM
      PVI=PVI*.01
      RCI=RCI*.01
      PCTCI=PCTCI*.01
      FCI=FCI*.01
      LCI=LCI*.01
      FHRCI=FHRCI*.01
      OAHCI=OAHCI*.01
      OVHCI=OVHCI*.01
      HCI=HCI*.01
C
 2606 CONTINUE
C
C      ECON CONTROL CARD(S) POND VALUE TABLE (CARD TYPE 13 & 14)
      IF (PONTAB.LE.0) GO TO 2610
      IF (PONTAB.GT.8) GO TO 2620
      READ (IUIN,2607,END=4027)(PONDVL(I,1),I=1,PONTAB)
 2607 FORMAT (8(1X,F4.1))
      READ (IUIN,2608,END=4029)(PONDVL(I,2),I=1,PONTAB)
 2608 FORMAT (8(1X,F5.0))
 2610 CONTINUE
C
C     ECON CONTROL CARD(S) LOGGING COST TABLE (CARD TYPES 15 & 16)
      IF (COSTAB.LE.0) GO TO 2618
      IF (LDI.LE.0.OR.LDI.GT.12) GO TO 2620
      IF (LVI.LE.0.OR.LVI.GT.12) GO TO 2620
      READ (IUIN,2612,END=4031)(LOGVI(I),I=1,LVI)
 2612 FORMAT (5X,12F6.2)
      DO 2613 I=1,LDI
 2613 READ (IUIN,2614,END=4033) LOGDI(I),(LOGCI(I,J),J=1,LVI)
 2614 FORMAT (1X,F4.1,12F6.0)
 2616 CONTINUE
      IF (COSTAB.NE.2) GO TO 2618
      IF (LDF.LE.0.OR.LDF.GT.12) GO TO 2620
      IF (LVF.LE.0.OR.LVF.GT.12) GO TO 2620
      READ (IUIN,2612,END=4035) (LOGVF(I),I=1,LVF)
      DO 2617 I=1,LDF
 2617 READ (IUIN,2614,END=4037) LOGDF(I),(LOGCF(I,J),J=1,LVF)
 2618 CONTINUE
C      ECON CONTROL CARD(S) FERT RATES AND COSTS
C
      IF (FERTAS.GT.0.OR.FERTCT.GT.0) THEN
         IF (FC.LE.15..AND.FC.GT.0.0) THEN
             READ (IUIN,2650,END=265)
     1           ((CNIT(I,J),J=1,2),I=1,FC)
 2650        FORMAT ( 9(1X,F3.0,F4.0))
         ELSE
             STOP ' READIN-FC IN ERROR'
          END IF
      END IF
      GO TO 265
C
C  ERROR IN TABLE SPECIFICATIONS
 2620 CONTINUE
      WRITE (IUOUT,2622) PONTAB,LDI,LDF,LVI,LVF
 2622 FORMAT (' ERROR - ONE OF FOLLOWING IS OUT OF BOUND',/,
     1 ' PONTAB',I3,' LDI,LDF',2I3,' LVI,LVF',2I3)
      GO TO 2602
  265 CONTINUE
C  EEEEEEEEEE
C
      NRA = NRA*19
      IF (IOBS.LE.0) GO TO 300
      IF (IOBS.GE.7) GO TO 310
C
C     OBSERVED HEIGHTS CARD(S) (CARD TYPE 9)
C
      JJ = 1
      II = 0
      DO 280 J=1,IOBS
      II = JJ+1
      JJ = JJ+5
      READ(IUIN,270,END=4039)(OBSAGE(I),OBSHTS(1,I),OBSHTS(2,I),I=II,JJ)
  270 FORMAT (5(1X,F3.0,1X,F4.1,1X,F4.1))
  280 CONTINUE
      IOBS = IOBS*5+1
      J = 0
      DO 290 I=2,IOBS
      IF (OBSAGE(I).LE.0.0) GO TO 290
      J = J+1
  290 CONTINUE
      IOBS = J+1
  300 CONTINUE
      IF (TAST.LE.0.0) RETURN
      IF (IORG.EQ.1.AND.TAST.LT.75.0.OR.PCT.GT.0.0.AND.TAST.LT.75.0)
     $ GO TO 310
      RETURN
  310 CONTINUE
      IOBS = IOBS*5
      ISTOP = 1
      RETURN
  320 CONTINUE
      ISTOP = 2
      RETURN
 2602 CONTINUE
      ISTOP = 4
      RETURN
 4001 write(6,4002)
 4002 format(1x, 'end of file, message 1')
      goto 2602
 4003 write(6,4004)
 4004 format(1x, 'end of file, message 2')
      goto 2602
 4005 write(6,4006)
 4006 format(1x, 'end of file, message 3')
      goto 2602
 4007 write(6,4008)
 4008 format(1x, 'end of file, message 4')
      goto 2602
 4009 write(6,4010)
 4010 format(1x, 'end of file, message 5')
      goto 2602
 4011 write(6,4012)
 4012 format(1x, 'end of file, message 6')
      goto 2602
 4013 write(6,4014)
 4014 format(1x, 'end of file, message 7')
      goto 2602
 4015 write(6,4016)
 4016 format(1x, 'end of file, message 8')
      goto 2602
 4017 write(6,4018)
 4018 format(1x, 'end of file, message 9')
      goto 2602
 4019 write(6,4020)
 4020 format(1x, 'end of file, message 10')
      goto 2602
 4021 write(6,4022)
 4022 format(1x, 'end of file, message 11')
      goto 2602
 4023 write(6,4024)
 4024 format(1x, 'end of file, message 12')
      goto 2602
 4025 write(6,4026)
 4026 format(1x, 'end of file, message 13')
      goto 2602
 4027 write(6,4028)
 4028 format(1x, 'end of file, message 14')
      goto 2602
 4029 write(6,4030)
 4030 format(1x, 'end of file, message 15')
      goto 2602
 4031 write(6,4032)
 4032 format(1x, 'end of file, message 16')
      goto 2602
 4033 write(6,4034)
 4034 format(1x, 'end of file, message 17')
      goto 2602
 4035 write(6,4036)
 4036 format(1x, 'end of file, message 18')
      goto 2602
 4037 write(6,4038)
 4038 format(1x, 'end of file, message 19')
      goto 2602
 4039 write(6,4040)
 4040 format(1x, 'end of file, message 20')
      goto 2602
C4031 write(6,4002)
C4032 format(1x, 'end of file, message 8')
C     goto 2602
      END
      SUBROUTINE XMORT(DLIM,SSMORT)
C
C     SUBROUTINE TO CALCULATE SALVAGE OF MORTALITY OPTION
C
      COMMON/ECONO/ A,B,C,COSTAB,ECO,EUNITS,FC,FCI,FHRC,FHRCI,
     1 HAULC1,HC,HCI,IFER,LCI,LCM,LDF,LDI,LOGC1,LOGCF(12,12),
     2 LOGCI(12,12),LOGDF(12),LOGDI(12),LOGVF(12),LOGVI(12),
     3 LVF,LVI,MAH,NETRV1,OAHC,OAHCI,OATC,OTHRC1,OVHC,OVHCI,
     4 OVTC,PCTC,PCTCI,PNW1,PNW2,PNDVL1,PONDVL(8,2),PONTAB,
     5 PVI,R,RCI,REGENC,SEV,TRUED,TYHV,VOLM,FAGE(15,2),CNIT(15,2),DNR,
     6 VDEAD,CVDEAD,VOLUME,CUMVOL,FALL,IMORT,CMORT
      COMMON/EMORT/MORTE(16,4),DMORT,GMORT,TAMORT,VMORTE
      REAL LOGC1,LOGCF,LOGCI,LOGDF,LOGDI,LOGVF,LOGVI,MAH,NETRV1,LCI,LCM
      INTEGER COSTAB,ECO,PONTAB
      REAL MORTE,DLOSS(6)
      INTEGER EUNITS,TYHV
      DATA DLOSS/0.0,2.0,4.0,5.5,6.8,8.0/
C  SET VARIABLES
C DBMORT,GBMORT,TBMORT,VBMORT,II,SSMORT,BA,VMORT,BCU1,BCU2
C
      DBMORT=0.0
      TBMORT=0.0
      VBMORT=0.0
      SSMORT=0.0
      BA=0.0
      VMORT=0.0
      BCU1=0.0
      BCU2=0.0
      II=0
      IF (TYHV.EQ.1) THEN
      DO 30 I=1,16
        IF (MORTE(I,4).LE.0.0) GO TO 30
           DBMORT=MORTE(I,1)
           TBMORT=MORTE(I,3)
           VBMORT=MORTE(I,4)
           II=I
      GO TO 31
   30 CONTINUE
      ELSE
        DBMORT=DMORT
        TBMORT=TAMORT
        VBMORT=VMORTE
      END IF
   31 CONTINUE
      IF(DBMORT.EQ.0.0.OR.TBMORT.EQ.0.0.OR.VBMORT.EQ.
     1 0.0) GO TO 35
C
C  CALCULATE VARIABLES TMORT,TARIF
C
        TMORT=VBMORT/TBMORT
        BA=.00545415*DBMORT**2
        TARIF=(TMORT*.912733)/
     $  ((1.0330*(1.0+1.382937*EXP(-4.015292*(DBMORT/10))))*
     $  (BA+.087266)-.174533)
C
C  CALCULATE VARIABLE VMORT
C
      VMORT=0.0
C
C      CALCULATE CV4 UNITS PER TREE
C
        VMORT=TARIF*(BA-.087266)/.912733
      IF (VMORT.LT.0.0) VMORT=0.0
      IF (VMORT.EQ.0.0) GO TO 35
      IF (EUNITS.EQ.1) GO TO 33
C
C      CALCULATE CV6 UNITS
C
        VMORT=VMORT*(.993-.993*.62**(DBMORT-6.))
        B4=TARIF/.912733
C
C     CALCULATE SV6 UNITS
C
      IF (EUNITS.EQ.4) THEN
        BCU1=(10.**.1887)
     $       *(DBMORT**(4.523887*ALOG10(B4)))
     $       *(B4**(-.231146*ALOG10(DBMORT)**2))
     $       *(DBMORT**(-1.100526*ALOG10(B4)**2))
     $       *(DBMORT**(-3.143680))
     $       *(B4**(-.181216*ALOG10(B4)))
        VMORT=VMORT*BCU1
      END IF
C
C     CALCULATE IV6 UNITS
C
      IF (EUNITS.EQ.3) THEN
        BCU2=(10.**.1254)
     $       *(DBMORT**(2.51781*ALOG10(B4)))
     $       *(B4**(.306691*ALOG10(DBMORT)**2))
     $       *(DBMORT**(-.837277*ALOG10(B4)**2))
     $       *(DBMORT**(-.899419))
     $       *(DBMORT**(-.844008*ALOG10(DBMORT)))
        VMORT=VMORT*BCU2
      END IF
C
   33 CONTINUE
C
C  CALCULATE MORTALITY FOR 5 PRECEDING YEARS
C
        BAN=0.0
        SMORT=0.0
        SSMORT=0.0
      IF ((DBMORT-DLOSS(1)).LE.DLIM) GO TO 35
      DO 34 I=1,6
        BAN=(DBMORT-DLOSS(I))**2*.00545415
          SMORT=BAN/BA*VMORT
          IF(BAN/BA.LT..5) GO TO 45
          IF((DBMORT-DLOSS(I)).LT.DLIM) GO TO 45
            SSMORT=SSMORT+SMORT
   34 CONTINUE
C  CONVERT MORTALITY VOLUME/TREE TO VOLUME/ACRE
   45 CONTINUE
      SSMORT=SSMORT*TBMORT
      GO TO 38
   35 CONTINUE
      SSMORT=0.0
   38 CONTINUE
      IF (II.GT.0.AND.TYHV.EQ.1) THEN
      DO 50 I=1,4
   50 MORTE(II,I)=0.0
      END IF
C     PRINT *,TYHV
C     PRINT *,((MORTE(KK,KKK),KKK=1,4),KK=1,16)
      RETURN
      END
